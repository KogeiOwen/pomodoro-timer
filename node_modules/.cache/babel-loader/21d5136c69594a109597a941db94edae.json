{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owenk\\\\js-bootcamp\\\\holding\\\\challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ButtonComponent.js\";\nimport React, { useState } from \"react\";\nexport default function ButtonComponent({\n  type,\n  className,\n  dataTestid,\n  className2,\n  timerObject,\n  setTimerObject\n}) {\n  const incrementHandler = () => {\n    if (dataTestid.includes(\"increase\")) {\n      if (dataTestid.includes(\"focus\")) {\n        if (timerObject.focusDuration < timerObject.focusMax) {\n          timerObject.focusDuration += timerObject.focusIncrement;\n        }\n      } else {\n        if (timerObject.breakDuration < timerObject.breakMax) {\n          timerObject.breakDuration += timerObject.breakIncrement;\n        }\n      }\n    } else {\n      if (dataTestid.includes(\"focus\")) {\n        if (timerObject.focusDuration > timerObject.focusMin) {\n          timerObject.focusDuration -= timerObject.focusIncrement;\n        }\n      } else {\n        if (timerObject.breakDuration > timerObject.breakMin) {\n          timerObject.breakDuration -= timerObject.breakIncrement;\n        }\n      }\n    }\n\n    setTimerObject(() => {\n      return { ...timerObject,\n        focusSeconds: timerObject.focusDuration * 60,\n        breakSeconds: timerObject.breakDuration * 60\n      };\n    }); // setTimerObject({...timerObject});\n  };\n\n  if (timerObject.state == \"stop\") {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: type,\n      className: className,\n      \"data-testid\": dataTestid,\n      onClick: incrementHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: className2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: type,\n      className: className,\n      \"data-testid\": dataTestid,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: className2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/owenk/js-bootcamp/holding/challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ButtonComponent.js"],"names":["React","useState","ButtonComponent","type","className","dataTestid","className2","timerObject","setTimerObject","incrementHandler","includes","focusDuration","focusMax","focusIncrement","breakDuration","breakMax","breakIncrement","focusMin","breakMin","focusSeconds","breakSeconds","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,eAAe,SAASC,eAAT,CAAyB;AAACC,EAAAA,IAAD;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,UAA7B;AAAwCC,EAAAA,WAAxC;AAAqDC,EAAAA;AAArD,CAAzB,EACf;AAEO,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAGJ,UAAU,CAACK,QAAX,CAAoB,UAApB,CAAH,EACA;AACI,UAAGL,UAAU,CAACK,QAAX,CAAoB,OAApB,CAAH,EACA;AACK,YAAGH,WAAW,CAACI,aAAZ,GAA6BJ,WAAW,CAACK,QAA5C,EACA;AACIL,UAAAA,WAAW,CAACI,aAAZ,IAA6BJ,WAAW,CAACM,cAAzC;AACH;AACL,OAND,MAQA;AACC,YAAGN,WAAW,CAACO,aAAZ,GAA6BP,WAAW,CAACQ,QAA5C,EACI;AACIR,UAAAA,WAAW,CAACO,aAAZ,IAA6BP,WAAW,CAACS,cAAzC;AACH;AACL;AACJ,KAhBD,MAkBA;AACC,UAAGX,UAAU,CAACK,QAAX,CAAoB,OAApB,CAAH,EACA;AACI,YAAGH,WAAW,CAACI,aAAZ,GAA6BJ,WAAW,CAACU,QAA5C,EACI;AACIV,UAAAA,WAAW,CAACI,aAAZ,IAA6BJ,WAAW,CAACM,cAAzC;AACH;AAER,OAPD,MASA;AACI,YAAGN,WAAW,CAACO,aAAZ,GAA6BP,WAAW,CAACW,QAA5C,EACI;AACIX,UAAAA,WAAW,CAACO,aAAZ,IAA6BP,WAAW,CAACS,cAAzC;AACH;AACR;AACD;;AACDR,IAAAA,cAAc,CAAC,MAAM;AACpB,aAAO,EACL,GAAGD,WADE;AAELY,QAAAA,YAAY,EAAEZ,WAAW,CAACI,aAAZ,GAA0B,EAFnC;AAGLS,QAAAA,YAAY,EAAEb,WAAW,CAACO,aAAZ,GAA0B;AAHnC,OAAP;AAKD,KANc,CAAd,CApC2B,CA2C5B;AACF,GA5CD;;AA6CA,MAAGP,WAAW,CAACc,KAAZ,IAAqB,MAAxB,EACA;AACC,wBACI;AACA,MAAA,IAAI,EAAElB,IADN;AAEA,MAAA,SAAS,EAAEC,SAFX;AAGA,qBAAaC,UAHb;AAIA,MAAA,OAAO,EAAEI,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMD;AAAM,MAAA,SAAS,EAAEH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANC,CADJ;AAUA,GAZD,MAcA;AACC,wBACI;AACA,MAAA,IAAI,EAAEH,IADN;AAEA,MAAA,SAAS,EAAEC,SAFX;AAGA,qBAAaC,UAHb;AAID,MAAA,QAAQ,EAAE,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMD;AAAM,MAAA,SAAS,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANC,CADJ;AAUA;AAEP","sourcesContent":["import React, { useState } from \"react\";\n\n\nexport default function ButtonComponent({type,className, dataTestid, className2,timerObject, setTimerObject} )\n{\n    \n       const incrementHandler = () => {\n           if(dataTestid.includes(\"increase\"))\n           {\n               if(dataTestid.includes(\"focus\"))\n               {\n                    if(timerObject.focusDuration < (timerObject.focusMax))\n                    {\n                        timerObject.focusDuration += timerObject.focusIncrement;\n                    }\n               }\n               else\n               {\n                if(timerObject.breakDuration < (timerObject.breakMax))\n                    {\n                        timerObject.breakDuration += timerObject.breakIncrement;\n                    }\n               }\n           }\n           else\n           {\n            if(dataTestid.includes(\"focus\"))\n            {\n                if(timerObject.focusDuration > (timerObject.focusMin))\n                    {\n                        timerObject.focusDuration -= timerObject.focusIncrement;\n                    }\n                    \n            }\n            else\n            {\n                if(timerObject.breakDuration > (timerObject.breakMin))\n                    {\n                        timerObject.breakDuration -= timerObject.breakIncrement;\n                    }\n            }\n           }\n           setTimerObject(() => {\n            return {\n              ...timerObject,\n              focusSeconds: timerObject.focusDuration*60,\n              breakSeconds: timerObject.breakDuration*60,\n            };\n          });\n          // setTimerObject({...timerObject});\n       }\n       if(timerObject.state == \"stop\")\n       {\n        return(\n            <button\n            type={type}\n            className={className}\n            data-testid={dataTestid}\n            onClick={incrementHandler}\n          >\n           <span className={className2} />\n          </button>\n        )\n       }\n       else\n       {\n        return(\n            <button\n            type={type}\n            className={className}\n            data-testid={dataTestid}\n           disabled={true}\n          >\n           <span className={className2} />\n          </button>\n        )\n       }\n        \n}"]},"metadata":{},"sourceType":"module"}